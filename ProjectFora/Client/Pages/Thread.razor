@page "/thread/{Id:int}"
@inject IUserManager UserManager
@inject IMessageManager MessageManager
@inject ILocalStorageService LocalStorage

<h3>Create a new message</h3>


<EditForm Model=@newMessage OnValidSubmit="CreateNewMessage">
    <div class="form-group">
        <label for="message">Message</label>
        <InputText class="form-control" id="message" @bind-Value="newMessage.Message"/>
    </div>
    <button type="submit" class="btn btn-primary">Create</button>
</EditForm>


@code {
    [Parameter]
    public int Id { get; set; }

    private MessageModel newMessage = new();


    void CreateNewMessage()
    {
        MessageManager.PostMessage(newMessage);
    }


    protected override async Task OnParametersSetAsync()
    {
        // Get token
        string token = await LocalStorage.GetItemAsStringAsync("token");

        if(!String.IsNullOrEmpty(token))
        {
            // Get the thread with all messages
            var threadMessages = MessageManager.GetThreadMessages(Id, token);
        }
    }

}
