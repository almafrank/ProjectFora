@page "/interestpage"
@inject IInterestManager InterestManager
@inject IUserManager UserManager
@inject NavigationManager NavigationManager
@inject IUserInterestManager UserInterestManager

<div class="card">
    <div class="card-header">Mina intressen:</div>
    @if (userInterests != null)
    {
        <div class="card-body">
            @foreach (var interest in userInterests)
            {
                <h5 class="card-title" onclick="@(() => NavigateToThreads(@interest.Id))">@interest.Name</h5>

                @if (@interest.Threads != null)
                {
                    <h6 class="card-subtitle mb-2 text-muted"> @interest.Threads.Count trådar</h6>
                }

                @if (interest.UserId == currentUser.Id)
                {
                    <a class="card-link" onclick="@(() => DeleteInterest(interest.Id))">Ta bort</a>

                    @if (interest.Threads != null)
                    {
                        <input type="text" @bind-value=changeName placeholder="change name.." />
                        <a class="card-link" onclick="@(() => SaveEditedInterest(interest.Id))">Ändra</a>
                    }
                }
                <hr />
            }
        </div>
    }
    else
    {
       <div> <p>Laddar..</p></div>
    }
</div>

@code {
    public List<InterestModel>? userInterests;
    private UserStatusDto? userStatus;
    private UserModel currentUser = new();
    private string changeName = "";
    private string? token;
    public string? message;


    protected override async Task OnInitializedAsync()
    {
        // Get token
        token = await UserManager.GetToken();

        userStatus = await UserManager.CheckUserLogin(token);

        // Get user interests
        userInterests = await UserInterestManager.GetUserInterests(token);
        currentUser = await UserManager.GetCurrentUser(token);
    }

    public void NavigateToThreads(int Id)
    {
        NavigationManager.NavigateTo($"threads/{Id}");
    }

    private async Task SaveEditedInterest(int Id)
    {

        await InterestManager.UpdateInterest(Id, changeName, token);
        changeName = "";
        userInterests = await UserInterestManager.GetUserInterests(token);
        StateHasChanged();

    }

    public async Task DeleteInterest(int Id)
    {
        message = await UserInterestManager.DeleteUserInterest(Id, token);
        await InterestManager.DeleteInterest(Id, token);
        userInterests = await UserInterestManager.GetUserInterests(token);
        StateHasChanged();
    }
}

@*Sida: Intressen
    En sida där man kan se intressen man har på sin användare
    Funktionalitet
    Se intressen man har på sin användare -check
    Se antalet trådar som finns skapade för intresset -check
    Klicka och gå in på ett intresse -check

    Ta bort ett intresse om man skapat det - check
    Ändra namn på ett intresse om man skapat det och det inte har några trådar
*@