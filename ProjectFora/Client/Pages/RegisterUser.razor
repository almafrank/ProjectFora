@page "/registerUser"

@inject IAccountManager UserManager
@inject NavigationManager NavigationManager

<h3>Register</h3>

<div class="card">
    <div class="card-body">
        <h5 class="card-title">Please enter your details</h5>
        <EditForm Model="registerUser" OnValidSubmit="HandleRegistration">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="email">Email address</label>
                <InputText Id="email" class="form-control" @bind-Value="registerUser.Email" />
                <ValidationMessage For="@(() => registerUser.Email)" />
            </div>
            <div class="form-group">
                <label for="password">Password</label>
                <InputText Id="password" type="password" class="form-control" @bind-Value="registerUser.Password" />
                <ValidationMessage For="@(() => registerUser.Password)" />
            </div>
            <div class="form-group">
                <label for="password">Confirm Password</label>
                <InputText Id="confirmPassword" type="password" class="form-control" @bind-Value="registerUser.ConfirmPassword" />
                <ValidationMessage For="@(() => registerUser.ConfirmPassword)" />
            </div>
            <button type="submit" class="btn btn-primary">Submit</button>
        </EditForm>
    </div>
</div>
@code {
    private UserForRegistrationDto registerUser = new UserForRegistrationDto();

    public async Task HandleRegistration()
    {

        await UserManager.RegisterUser(registerUser);
        NavigationManager.NavigateTo("/login");
        //Ska få tillbaka en token vid registrering
        //Uppdatera local storage
    }

}
