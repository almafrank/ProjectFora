@page "/registerUser"

@inject IAccountManager UserManager
@inject NavigationManager NavigationManager
@inject IInterestManager Intererestmanager

<h3>Register</h3>

<div class="card">
    <div class="card-body">
        <h5 class="card-title">Please enter your details</h5>
        <EditForm Model="registerUser" OnValidSubmit="HandleRegistration">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="email">Email address</label>
                <InputText Id="email" class="form-control" @bind-Value="registerUser.Email" />
                <ValidationMessage For="@(() => registerUser.Email)" />
            </div>
            <div class="form-group">
                <label for="password">Password</label>
                <InputText Id="password" type="password" class="form-control" @bind-Value="registerUser.Password" />
                <ValidationMessage For="@(() => registerUser.Password)" />
            </div>
            <div class="form-group">
                <label for="password">Confirm Password</label>
                <InputText Id="confirmPassword" type="password" class="form-control" @bind-Value="registerUser.ConfirmPassword" />
                <ValidationMessage For="@(() => registerUser.ConfirmPassword)" />
            </div>
            <button type="submit" class="btn btn-primary">Submit</button>
        </EditForm>
    </div>
</div>

<div>
    <h1>Interests - choose 1 - 5</h1>
   
    @foreach(var interest in Interests)
    {
        <div>
       <input type="checkbox">@interest.Name
       </div>
}
</div>


@code {
    private UserForRegistrationDto registerUser = new UserForRegistrationDto();
    public List<InterestModel> Interests { get; set; } = new();
    public List<UserInterestModel> MyProperty { get; set; }
    protected override async Task OnInitializedAsync()
    {
        Interests = await Intererestmanager.GetAllInterest();
    }
    public async Task HandleRegistration()
    {
         //måste kolla så att inte användaren redan finns på databasen
        await UserManager.RegisterUser(registerUser);
        NavigationManager.NavigateTo("/login");
     
    }

}
