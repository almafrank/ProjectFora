@page "/threads/{Id:int}"
@using ProjectFora.Shared;
@inject IThreadsManager ThreadManager
@inject IUserManager UserManager
@inject IMessageManager MessageManager
@inject IInterestManager InterestManager
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager

@* Matar ut alla interest threads *@
@if (Interest != null)

{
    <h1>@Interest.Name</h1>
    <hr />
    <h3>Threads:</h3>
    <div>
        @if (Interest.Threads != null)
        {
            @foreach (var thread in Interest.Threads)
            {

                @thread.Name
                @if (thread.Messages != null)
                {
                    <p>@thread.Messages.Count meddelande</p>
                }
                @if (thread.User != null)
                {
                    @if (thread.User.Banned == true || thread.User.Deleted == true)
                    {
                        <p>"red symbol"</p>
                    }
                    @if (thread.UserId == currentUser.Id)
                    {
                        <button @onclick="@(()=>NavigateToDeleteAThread(@thread.Id))">Delete A Thread</button>
                        @if (thread.Messages == null || !thread.Messages.Any())
                        {
                        <button @onclick="@(()=>NavigateToUpdateAThread(@thread.Id))">Update A Thread</button>
                        }
                    }
                }

                <button @onclick="@(()=>NavigateToAThread(@thread.Id))">Get A Thread</button>
                <button @onclick="@(()=>NavigateToUpdateAThread(@thread.Id))">Update A Thread</button>
            }
        }
    </div>


    <h3>Create a new thread</h3>

<EditForm Model=threadToAdd OnValidSubmit="AddThread">
    <div class="form-group">
        <label for="name">Thread name</label>
        <InputText class="form-control" id="name" @bind-Value="threadToAdd.Name"/>
    </div>
    <button type="submit" class="btn btn-primary">Create</button>
</EditForm>

}

@code {
    [Parameter]
    public int Id { get; set; }
    private UserModel currentUser = new();
    public InterestModel Interest = new();//new intrest
    private ThreadDto threadToAdd = new();
    private string token = "";

    protected override async Task OnParametersSetAsync()
    {
        token = await UserManager.GetToken();
        // Get interest with its threads
        Interest = await InterestManager.GetInterest(Id, token);
        currentUser = await UserManager.GetCurrentUser(token);
    }

    //1.metod att hämta tråd när söker på-klicka och gå in på en tråd...
    public async Task NavigateToAThread(int Id)
    {
        NavigationManager.NavigateTo($"thread/{Id}");
    }

    //2.metod att ta bort en tråd när man klickar
    public async Task NavigateToDeleteAThread(int Id)
    {
        NavigationManager.NavigateTo($"thread/{Id}");
    }

    //3.metod som updaterar/edit en tråd när man klickar
    public async Task NavigateToUpdateAThread(int Id)
    {
        NavigationManager.NavigateTo($"thread/{Id}");
    }

    public async Task AddThread()
    {
        threadToAdd.InterestId = Id;
        await ThreadManager.CreateThread(threadToAdd, token);
        Interest = await InterestManager.GetInterest(Id, token);
        StateHasChanged();
    }




}




@*Sida: Trådar

    Funktionalitet:

    Sortera och söka på trådar

    Se antalet meddelanden i varje tråd
    Trådar skapade av bannade eller borttagna användare ska ha en olika symboler som visar att användaren ärantingen bannad eller borttagen

    2.Ta bort en tråd om man skapat den
    3.Ändra namn på en tråd om man skapat den och den inte har några meddelanden
*@