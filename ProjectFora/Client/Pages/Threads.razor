@page "/threads/{Id:int}"
@using ProjectFora.Shared;
@inject IThreadsManager ThreadManager
@inject IUserManager UserManager
@inject IMessageManager MessageManager
@inject IInterestManager InterestManager
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager

@* Matar ut alla interest threads *@
<h1>@Interest.Name</h1>
<hr />
<button type="text" @onclick="SortThreads">Sortera efter namn</button>
<div class="card">
    <div class="card-header">Sök</div>
    <div class="card-body">
        <EditForm Model=searchWord OnValidSubmit="Search">
            <label for="searchWord">Search</label>
            <input type="text" placeholder="searchThread" id=searchWord @bind-value="searchWord" />
            <button type="submit" class="btn btn-primary"> Search</button>
        </EditForm>
    </div>
</div>


@if (searchThread != null)
{
    <div class="card">
        <div class="card-header">Sökresultat</div>
    @foreach (var thread in searchThread)
    {
        <div class="card-body">
            <h5 class="card-title" @onclick="@(()=>NavigateToAThread(@thread.Id))">@thread.Name</h5>
        </div>
    }
    </div>
}

<div class="card">
    @if (Interest != null)
    {
        <div class="card-header">Trådar:</div>
        @if (Interest.Threads != null)
        {
            <div class="card-body">
                @foreach (var thread in Interest.Threads)
                {
                    <h5 class="card-title" @onclick="@(()=>NavigateToAThread(@thread.Id))">@thread.Name</h5>

                    @if (thread.Messages != null)
                    {
                        <h6 class="card-subtitle mb-2 text-muted">@thread.Messages.Count meddelande</h6>
                    }

                    @if (thread.UserId == currentUser.Id)
                    {
                        <button class="btn btn-danger btn-sm" @onclick="@(()=>DeleteAThread(@thread.Id))">Ta bort tråd</button>
                        @if (thread.Messages == null || !thread.Messages.Any())
                        {
                            <button class="btn btn-warning btn-sm" @onclick="UpdateAThread">Ändra</button>
                            @if (editThread == true)
                            {
                                <input type="text" @bind-value="threadToEdit.Name" />
                                <button class="btn btn-success btn-sm" @onclick="@(()=>SaveEditedThread(@thread.Id))">Spara</button>

                            }
                        }
                    }
                    <hr />
                }
            </div>
        }
    }
</div>

<div class="card">
    <div class="card-header">Skapa ny tråd</div>
    <div class="card-body">
        <EditForm Model=threadToAdd OnValidSubmit="AddThread">
            <div class="form-group">
                <label for="name">Tråd</label>
                <InputText class="form-control" placeholder="vad vill du diskutera?" id="name" @bind-Value="threadToAdd.Name" />
            </div>
            <button type="submit" class="btn btn-success btn-sm">Spara</button>
        </EditForm>
        <p>@message</p>
    </div>
</div>

@code {
    [Parameter]
    public int Id { get; set; }
    private UserModel currentUser = new();
    public InterestModel Interest = new();//new intrest
    private ThreadDto threadToAdd = new();
    private ThreadDto threadToEdit = new();
    private bool editThread;
    private string token = "";
    private List<ThreadModel> threads = new();
    private List<ThreadModel> searchThread = new();
    private string searchWord = "";
    private string message = "";

    protected override async Task OnParametersSetAsync()
    {

        token = await UserManager.GetToken();
        // Get interest with its threads
        Interest = await InterestManager.GetInterest(Id, token);
        currentUser = await UserManager.GetCurrentUser(token);
    }

    //1.metod att hämta tråd när söker på-klicka och gå in på en tråd...
    public async Task NavigateToAThread(int Id)
    {
        NavigationManager.NavigateTo($"thread/{Id}");
    }

    //2.metod att ta bort en tråd när man klickar
    public async Task DeleteAThread(int id)
    {
        await ThreadManager.DeleteThread(id, token);
        UpdateInterest();
    }

    //3.metod som updaterar/edit en tråd när man klickar
    public async Task UpdateAThread()
    {
        editThread = true;
    }

    public async Task SaveEditedThread(int id)
    {
        await ThreadManager.UpdateThread(id, threadToEdit, token);
        UpdateInterest();

    }

    public async Task AddThread()
    {
        threadToAdd.InterestId = Id;
        message = await ThreadManager.CreateThread(threadToAdd, token);
        UpdateInterest();
    }
    private async Task Search()
    {

        searchThread = Interest.Threads.Where(x => x.Name.ToLower().Contains(searchWord.ToLower())).ToList();

        StateHasChanged();
    }
    private async Task SortThreads()
    {
        Interest.Threads.Sort((a, b) => a.Name.CompareTo(b.Name));
        StateHasChanged();
    }

    async Task UpdateInterest()
    {
        Interest = await InterestManager.GetInterest(Id, token);
        StateHasChanged();
    }



    }




    @*Sida: Trådar

    Funktionalitet:

    Sortera och söka på trådar

    Se antalet meddelanden i varje tråd
    Trådar skapade av bannade eller borttagna användare ska ha en olika symboler som visar att användaren ärantingen bannad eller borttagen

    2.Ta bort en tråd om man skapat den
    3.Ändra namn på en tråd om man skapat den och den inte har några meddelanden
    *@
